local Tunnel = module("vrp","lib/Tunnel")
local Proxy = module("vrp","lib/Proxy")
vRP = Proxy.getInterface("vRP")

vSERVER = Tunnel.getInterface("flow_esc")

function Format(n)
    local left, num, right = string.match(n, '^([^%d]*%d)(%d*)(.-)$')
	return left .. (num:reverse():gsub('(%d%d%d)', '%1.'):reverse()) .. right
end
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- THREAD
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    CreateThread(function()
        while true do
            if not (IsPauseMenuActive()) then
                DisableControlAction(0, 200, true)
            end

            Wait( 0 )
        end
    end)

    ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    -- COMMANDS
    ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    local DelayTimer = GetGameTimer()
    RegisterCommand('open_menu', function(source,args)
        if (not IsPauseMenuActive()) and (DelayTimer - GetGameTimer() < 0) then
            DelayTimer = (GetGameTimer() + 3000)

            OpenMenu()
        end
    end)
    RegisterKeyMapping("open_menu","Open Menu","keyboard","ESCAPE")

    ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    -- CALLBACKS
    ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    RegisterNUICallback('open', function(data, cb)
        if data.action == 'map' then 
            ActivateFrontendMenu(GetHashKey('FE_MENU_VERSION_SP_PAUSE'), true)
        end

        if data.action == 'config' then 
            ActivateFrontendMenu(GetHashKey('FE_MENU_VERSION_LANDING_MENU'), true)
        end

        if data.action == 'update' then 
            if (not IsPauseMenuActive()) and (DelayTimer - GetGameTimer() < 0) then
                DelayTimer = (GetGameTimer() + 5000)
                OpenMenu()
            end

            return
        end

        if data.action == 'close' then 
            RestartGame()
        end

        CloseMenu()
    end)

    RegisterNUICallback('close', function(data, cb)
        CloseMenu()
    end)

    ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    -- FUNCTIONS
    ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    function OpenMenu()
        local Response = vSERVER.RequestMenu()

        Response.social = {}
        for index in pairs(Config.Social) do
            Response.social[index] = { url = Config.Social[index].url, status = Config.Social[index].active, name = index, image = Config.Social[index].image  }
        end

        SetNuiFocus(true, true)
        SendNUIMessage({ open = true, status = Response })
    end

    function CloseMenu()
        hasOpenned = false

        SetNuiFocus(false, false)
        SendNUIMessage({ open = false })
    end